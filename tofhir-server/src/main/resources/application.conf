# toFhir configurations
tofhir {

  # A path to a file/directory from where any File system readings should use within the mappingjob definition.
  # e.g., FileSystemSourceSettings.dataFolderPath or LocalFhirTerminologyServiceSettings.folderPath
  context-path = "./"

  mappings = {

    # The repository where the mapping definition are kept.
    repository = {
      folder-path = "mappings"
    }

    # Configuration of the schemas used in the mapping definitions.
    schemas = {
      repository = { # The repository where the schema definitions are kept.
        folder-path = "schemas"
      }
      # Specific FHIR version used for schemas in the schema repository.
      # Represents fhirVersion field in the standard StructureDefinition e.g. 4.0.1, 5.0.0
      fhir-version = "4.0.1"
    }

    contexts = {
      # The repository where the context definitions are kept.
      repository = {
        folder-path = "mapping-contexts"
      }
    }

    # Timeout for each mapping execution on an individual input record
    timeout = 5 seconds
  }

  mapping-jobs = {
    repository = { # The repository where the schema definitions are kept.
      folder-path = "mapping-jobs"
    }
    # Absolute path to the JSON file for the MappingJob definition to load at the beginning
    # initial-job-file-path = "mapping-jobs/pilot1-mappingjob.json"

    # Number of partitions to repartition the source data before executing the mappings for the mapping jobs
    # numOfPartitions = 10

    # Maximum number of records for batch mapping execution, if source data exceeds this it is divided into chunks
    # maxChunkSize = 10000
  }

  terminology-systems = {
    # The path to the folder where Terminology System files (config files, CodeSystems, ConceptMaps etc.) are kept.
    folder-path = "terminology-systems"
  }

  archiving = {
    # Folder to keep erroneous records
    erroneous-records-folder = "erroneous-records-folder"
    
    # Folder to keep archived files
    archive-folder = "archive-folder"
  
    # Frequency in milliseconds to run the archiving task for file streaming jobs
    stream-archiving-frequency = 5000
  }

  # Settings for FHIR repository writer
  fhir-server-writer {
    # The # of FHIR resources in the group while executing (create/update) a FHIR batch operation.
    batch-group-size = 50
  }

  # Database folder of toFHIR (e.g., to maintain synchronization times for scheduled jobs)
  db-path = "tofhir-db"

  # External function libraries containing function to be used within FHIRPath expressions
  functionLibraries {
    rxn {
      className = "io.tofhir.rxnorm.RxNormApiFunctionLibraryFactory"
      args = ["https://rxnav.nlm.nih.gov", 2]
    }
    cst {
      className = "io.tofhir.common.util.CustomMappingFunctionsFactory"
    }
  }
}

fhir = {
  # major FHIR version, currently R4 and R5 is supported
  fhir-version = "R5"

  # List of root URLs while retrieving the definitions (profiles, valuesets, codesystems).
  # The definitions below the given root URLs will be retrieved from the configured paths or FHIR endpoints.
  # All definitions will be retrieved if no root URLs are provided.
  # e.g. ["https://aiccelerate.eu", "https://fair4health.eu"]
  #definitions-root-urls = ["http://hl7.org/fhir/"]
  definitions-root-urls = null

  # FHIR URL to retrieve resource definitions (profiles, valuesets and codesystems).
  # If this URL is defined, file paths (profiles-path, valuesets-path, codesystems-path) will be ignored even if they are also provided.
  # For now, toFHIR can read definitions from a single FHIR endpoint.
  #definitions-fhir-endpoint = "http://localhost:8080/fhir"
  definitions-fhir-endpoint = null

  fhir-endpoint-auth = {
    # basic | token | fixed-token
    # If one of the auth methods is selected, its configurations must be provided as shown below.
    method = null

#     # basic configurations are used if the auth method is basic
#     basic = {
#       username = "user"
#       password = "pass"
#     }
#
#     # token configurations are used if the auth method is token
#     token = {
#       client-id = "id"
#       client-secret = "secret"
#       scopes = []
#       token-endpoint = "https://onauth.srdc.com.tr"
#     }

#    # fixed token configurations are used if the auth method is fixed-token
#    fixed-token = "XXX"
  }

  # A path to a context file/directory from where profiles, value sets and code systems reading should start.
  context-path = "./"
  # Path to the zip file or folder that includes the FHIR resource and data type profile definitions (FHIR StructureDefinition) to be served by toFHIR webserver so that mappings can be performed accordingly.
  profiles-path = null

  # Path to the zip file or folder that includes the FHIR Value Set definitions (FHIR ValueSet) that are referenced by your FHIR profiles.
  valuesets-path = null

  # Path to the zip file or folder that includes the FHIR Code system definitions (FHIR CodeSystem) that are referenced by your FHIR value sets.
  codesystems-path = null
}

webserver = {
  # Hostname that toFHIR server will work. Using 0.0.0.0 will bind the server to both localhost and the IP of the server that you deploy it.
  host = 0.0.0.0

  # Port to listen
  port = 8085

  # Base Uri for server e.g. With this default configuration, the root path of toFHIR server will be http://localhost:8085/tofhir
  base-uri = tofhir

  ssl {
    # Path to the java keystore for enabling ssl for toFHIR server, use null to disable ssl
    keystore = null
    # Password of the keystore for enabling ssl for toFHIR server
    password = null
  }
}

# Spark configurations
spark = {
  app.name = "toFHIR Server"
  master = "local[4]"
  ui.enabled = "false"
  # Directory to store Spark checkpoints
  checkpoint-dir = "checkpoint"

#   # Cluster configurations for spark
#   spark.submit.deployMode = "cluster"
#   spark.driver.host = "192.168.1.103"
#   spark.driver.core = "8"
#   spark.driver.memory = "12g"
#   spark.executor.cores = "8"
#   spark.executor.memory = "14g"
#   spark.network.timeout = "600s"
#   spark.jars = "tofhir-server-standalone.jar"
}

akka = {
  daemonic = "on"

  # Configurations for Akka HTTP
  http = {
    parsing = {
      max-header-value-length = 82k
    }
    server = {
      # Header for server
      server-header = toFHIR Server
      parsing{
        uri-parsing-mode = relaxed
        # Default maximum content length which should not be exceeded by incoming request entities.
        # Set to `infinite` to completely disable entity length checks.
        max-content-length = 8m
      }
      # Request timeout for all REST services
      request-timeout = 60 s
      # Maximum inactivity time of a given HTTP connection
      idle-timeout = 60 s
      # Should be on in order to get IP address of the clients for audits
      remote-address-header = on
    }
  }
}

# Configuration for the tofhir-redcap service
tofhir-redcap {
  # Base URL of the tofhir-redcap service
  endpoint = "http://localhost:8095/tofhir-redcap"

  # Paths for the endpoints provided by tofhir-redcap
  paths {
    # Specifies the path to the notification endpoint relative to the endpoint URL i.e. http://localhost:8095/tofhir-redcap/notification
    notification = "notification"

    # Specifies the path to the projects endpoint relative to the endpoint URL  i.e. http://localhost:8095/tofhir-redcap/projects
    projects = "projects"

    # Specifies the path to the projects' data endpoint relative to the endpoint URL
    projectData = "data"
  }
  # Parameters for the endpoints provided by tofhir-redcap
  parameters {
    reload = "reload"
  }
}