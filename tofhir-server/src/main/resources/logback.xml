<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- Set the host for fluentd, if not given localhost is used -->
    <property name="FLUENT_HOST" value="${efk.fluent-host:-localhost}"/>
    <!-- Path to folder which keeps the logs -->
    <property name="LOG_FOLDER" value="logs"/>
    <!-- Stop output INFO at start -->
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

    <!-- Send messages to System.out -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- By default, encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <encoder>
            <pattern>%d{yyyy-MM-dd_HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Send messages to a file at "***.log" -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FOLDER}/tofhir-server.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d{yyyy-MM-dd_HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${LOG_FOLDER}/tofhir-server.%i.log.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE" />
    </appender>

    <appender name="FILE-AUDIT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FOLDER}/tofhir-mappings.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <includeMdc>false</includeMdc>
            <fieldNames>
                <thread>[ignore]</thread>
                <version>[ignore]</version>
                <loggerName>[ignore]</loggerName>
                <levelValue>[ignore]</levelValue>
            </fieldNames>
        </encoder>
        <!-- Encoder to map MapMarker to LogstashMarker
             Without this encoder, RollingFileAppender will ignore the markers -->
        <encoder class="io.tofhir.engine.logback.MapMarkerToLogstashMarkerEncoder" />

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${LOG_FOLDER}/tofhir-mappings.%i.log.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>
    <!-- Appender for fluentd -->
    <appender name="FLUENT" class="ch.qos.logback.more.appenders.DataFluentAppender">
        <!-- Configure the host and port for fluentd -->
        <remoteHost>${FLUENT_HOST}</remoteHost>
        <port>24224</port>
        <!-- We need only INFO logs. -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <!-- If true, Map Marker is expanded instead of nesting in the marker name -->
        <flattenMapMarker>true</flattenMapMarker>
    </appender>

    <appender name="ASYNC-AUDIT" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE-AUDIT" />
    </appender>

    <appender name="ASYNC-AUDIT-FLUENT" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FLUENT" />
        <!-- The blocking queue discards events based on priority when its capacity drops below 20%.
             By default, it drops TRACE, DEBUG, and INFO level events, retaining only WARN and ERROR level events.
             Since INFO events are crucial for recording mapping job results, we set the discardingThreshold to 0
             to prevent any INFO events from being dropped. -->
        <discardingThreshold>0</discardingThreshold>
    </appender>

    <!-- By default, the level of the root level is set to ERROR -->
    <root level="ERROR">
        <appender-ref ref="ASYNC" />
        <appender-ref ref="STDOUT" />
    </root>

    <!-- Loggers inherit appender-refs from the ancestors unless the additivity is set to false -->
    <!-- So, the loggers below will inherit the appender-refs from the root logger -->
    <logger name="io.tofhir.engine.data.write.SinkHandler">
        <appender-ref ref="ASYNC-AUDIT" />
        <appender-ref ref="ASYNC-AUDIT-FLUENT" />
    </logger>

    <logger name="io.tofhir.engine.mapping.job.FhirMappingJobManager">
        <appender-ref ref="ASYNC-AUDIT" />
        <appender-ref ref="ASYNC-AUDIT-FLUENT" />
    </logger>

    <logger name="io.tofhir.engine.execution.log.ExecutionLogger">
        <appender-ref ref="ASYNC-AUDIT" />
        <appender-ref ref="ASYNC-AUDIT-FLUENT" />
    </logger>

    <!-- Give me DEBUG level logs from io.tofhir package because the default is set to ERROR at root (above) -->
    <logger name ="io.tofhir" level="DEBUG" />

    <!-- Show WARN level logs from org.apache.spark package to see anything going wrong -->
    <logger name="org.apache.spark" level="WARN" />

</configuration>
