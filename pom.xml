<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.onfhir</groupId>
    <artifactId>tofhir_2.13</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>toFHIR</name>
    <description>toFHIR is a high-performance and scalable data transformation suite that can read existing data from
        various sources (CSV/Test/JSON/Parquet/Avro files, relational databases, Hive tables) and transform to FHIR
        resources through mapping definitions.
    </description>
    <url>https://tofhir.io</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>sinaci</id>
            <name>Ali Anıl Sınacı</name>
            <email>anil@srdc.com.tr</email>
            <organization>SRDC Corp.</organization>
            <organizationUrl>https://www.srdc.com.tr</organizationUrl>
        </developer>
        <developer>
            <id>tnamli</id>
            <name>Tuncay Namlı</name>
            <email>tuncay@srdc.com.tr</email>
            <organization>SRDC Corp.</organization>
            <organizationUrl>https://www.srdc.com.tr</organizationUrl>
        </developer>
        <developer>
            <id>YemreGurses</id>
            <name>Yunus Emre Gürses</name>
            <email>yunusemre@srdc.com.tr</email>
            <organization>SRDC Corp.</organization>
            <organizationUrl>https://www.srdc.com.tr</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/srdc/tofhir.git</connection>
        <developerConnection>scm:git:ssh://github.com:srdc/tofhir.git</developerConnection>
        <url>https://github.com/srdc/tofhir/tree/main</url>
    </scm>

    <modules>
        <module>tofhir-engine</module>
        <module>tofhir-server</module>
        <module>tofhir-common</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <scala.version>2.13.10</scala.version>
        <scala.binary.version>2.13</scala.binary.version>

        <!--Dependency versions-->
        <scala-logging.version>3.9.4</scala-logging.version>
        <onfhir.version>3.2-SNAPSHOT</onfhir.version>
        <onfhir-template-engine.version>1.0-SNAPSHOT</onfhir-template-engine.version>
        <json4s.version>3.7.0-M11</json4s.version>
        <scalatest.version>3.2.13</scalatest.version>
        <spark.version>3.3.1</spark.version>
        <jackson.version>2.13.4</jackson.version>
        <logback.version>1.2.11</logback.version>
        <logstash-logback-encoder.version>7.2</logstash-logback-encoder.version>
        <typesafe.config.version>1.4.2</typesafe.config.version>
        <postgres.version>42.5.0</postgres.version>
        <h2db.version>2.1.212</h2db.version>
        <cron4j.version>2.2.5</cron4j.version>
        <testcontainers.kafka>1.17.3</testcontainers.kafka>
        <log4j.version>2.16.0</log4j.version>
        <akka.version>2.6.20</akka.version>
        <akka-http.version>10.2.10</akka-http.version>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>4.6.1</version>
                    <configuration>
                        <scalaVersion>${scala.version}</scalaVersion>
                        <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
                        <encoding>UTF-8</encoding>
                        <args>
                            <arg>-deprecation</arg>
                            <arg>-feature</arg>
                        </args>
                    </configuration>
                    <executions>
                        <execution>
                            <id>scala-compile-first</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>add-source</goal>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>scala-test-compile</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M6</version>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>2.2.0</version>
                    <configuration>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <junitxml>.</junitxml>
                        <filereports>TestSuite.txt</filereports>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>
            <!-- Scala Library itself-->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <!-- onFHIR dependencies -->
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>onfhir-expression_${scala.binary.version}</artifactId>
                <version>${onfhir.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>onfhir-template-engine_${scala.binary.version}</artifactId>
                <version>${onfhir-template-engine.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>onfhir-path_${scala.binary.version}</artifactId>
                <version>${onfhir.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>onfhir-client_${scala.binary.version}</artifactId>
                <version>${onfhir.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>onfhir-config_${scala.binary.version}</artifactId>
                <version>${onfhir.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>onfhir-common_${scala.binary.version}</artifactId>
                <version>${onfhir.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>onfhir-r4_${scala.binary.version}</artifactId>
                <version>${onfhir.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>onfhir-server-r4_${scala.binary.version}</artifactId>
                <version>${onfhir.version}</version>
            </dependency>


            <!-- JSON4S -->
            <dependency>
                <groupId>org.json4s</groupId>
                <artifactId>json4s-jackson_${scala.binary.version}</artifactId>
                <version>${json4s.version}</version>
            </dependency>
            <dependency>
                <groupId>org.json4s</groupId>
                <artifactId>json4s-ext_${scala.binary.version}</artifactId>
                <version>${json4s.version}</version>
            </dependency>
            <!-- Spark dependencies -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Scala Logging -->
            <dependency>
                <groupId>com.typesafe.scala-logging</groupId>
                <artifactId>scala-logging_${scala.binary.version}</artifactId>
                <version>${scala-logging.version}</version>
            </dependency>

            <!-- Logback dependencies -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-access</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>1.7.25</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>

            <!-- Application Configuration -->
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${typesafe.config.version}</version>
            </dependency>

            <!-- Apache Spark-->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql-kafka-0-10_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!-- Dependency from jackson-dataformat-csv and logstash-logback-encoder-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- For CSV parsing -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Postgres driver for Spark Read JDBC -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>

            <!-- cron4j -->
            <dependency>
                <groupId>it.sauronsoftware.cron4j</groupId>
                <artifactId>cron4j</artifactId>
                <version>${cron4j.version}</version>
            </dependency>

            <!-- Akka HTTP Suite -->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http_${scala.binary.version}</artifactId>
                <version>${akka-http.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http-core_${scala.binary.version}</artifactId>
                <version>${akka-http.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http-caching_${scala.binary.version}</artifactId>
                <version>${akka-http.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor-typed_${scala.binary.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-stream-typed_${scala.binary.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>

            <!-- toFHIR Dependencies -->
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>tofhir-server-common_2.13</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>tofhir-engine_2.13</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.onfhir</groupId>
                <artifactId>tofhir-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Testkit for Akka Http-->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http-testkit_${scala.binary.version}</artifactId>
                <version>${akka.http.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- For Unit testing -->
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.binary.version}</artifactId>
                <version>${scalatest.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- For database testing -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2db.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Test containers to initialize Kafka during tests -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>kafka</artifactId>
                <version>${testcontainers.kafka}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-source</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>doc-jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sources</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-source</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>doc-jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>xtest</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>oss-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <name>Nexus Release Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
    </distributionManagement>

</project>
